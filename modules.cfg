loadmodule "jsonrpcs.so"
loadmodule "auth.so"
loadmodule "auth_db.so"
loadmodule "kex.so" 
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "dialog.so"
loadmodule "maxfwd.so"
loadmodule "usrloc.so"
loadmodule "registrar.so"
loadmodule "textops.so"
loadmodule "textopsx.so"
loadmodule "siputils.so"
loadmodule "carrierroute.so"
loadmodule "xlog.so"
loadmodule "nat_traversal.so"
loadmodule "sanity.so"
loadmodule "ctl.so"
loadmodule "cfg_rpc.so"
loadmodule "debugger.so"
loadmodule "acc.so"
loadmodule "db_postgres.so"
loadmodule "sqlops.so"
loadmodule "pike.so"
loadmodule "htable.so" 
loadmodule "nathelper.so"
loadmodule "rtpengine.so"
loadmodule "evrexec.so"
loadmodule "outbound.so"
loadmodule "uac.so"
loadmodule "dispatcher.so"
#loadmodule "topoh.so"
loadmodule "evapi.so"
loadmodule "ipops.so"
loadmodule "drouting.so"
loadmodule "xhttp.so"
loadmodule "xhttp_prom.so"
loadmodule "permissions.so"




modparam("jsonrpcs", "pretty_format", 1)
modparam("jsonrpcs", "fifo_name", "/var/run/kamailio/kamailio_rpc.fifo")
modparam("jsonrpcs", "dgram_socket", "/var/run/kamailio/kamailio_rpc.sock")

// ----- ctl params -----
modparam("ctl", "binrpc", "unix:/var/run/kamailio/kamailio_ctl")
// ----- tm params -----
// auto-discard branches from previous serial forking leg
modparam("tm", "failure_reply_mode", 3)
// default retransmission timeout: 30sec
modparam("tm", "fr_timer", 30000)
// default invite retransmission timeout after 1xx: 120sec
modparam("tm", "fr_inv_timer", 180000)
modparam("tm", "remap_503_500", 0)

// ----- rr params -----
// set next param to 1 to add value to ;lr param (helps with some UAs)
modparam("rr", "enable_full_lr", 0)
// do not append from tag to the RR (no need for this script)
modparam("rr", "append_fromtag", 1)
modparam("rr", "enable_double_rr", 1)

// ----- registrar params -----
modparam("registrar", "method_filtering", 1)
modparam("registrar", "append_branches", 1)
/* uncomment the next line not to allow more than 10 contacts per AOR */
//modparam("registrar", "max_contacts", 10)
// max value for expires of registrations
modparam("registrar", "max_expires", MAXEXPIRES)

// ----- usrloc params -----
modparam("usrloc", "db_url", DBURL)
modparam("usrloc", "db_mode", 2)

modparam("auth_db", "db_url",DBURL)
modparam("auth_db", "calculate_ha1", yes)
modparam("auth_db", "password_column", "password")

// modeDebug
modparam("debugger", "cfgtrace", 1)
modparam("debugger", "log_level_name", "exec")

# ----- nathelper params -----
modparam("nathelper", "natping_interval", 30)
modparam("nathelper", "ping_nated_only", 0)
modparam("nathelper", "sipping_from", PINGER)
modparam("nathelper|registrar", "received_avp", "$avp(RECEIVED)")




modparam("nat_traversal", "keepalive_method", "OPTIONS")
modparam("nat_traversal", "keepalive_interval", 90)


#----- flood detect--------------
modparam("pike", "sampling_time_unit", 2)
modparam("pike", "reqs_density_per_unit", 16)
modparam("pike", "remove_latency", 4)

modparam("htable", "htable", "cids=>size=8")
modparam("htable", "htable", "ipban=>size=8;autoexpire=300;")

modparam("rtpengine", "rtpengine_sock", "udp:127.0.0.1:7724")
#modparam("rtpengine", "rtpengine_sock", "udp:10.75.0.111:2223")
#modparam("rtpengine", "db_url", DBURL)
#modparam("rtpengine", "weight_col", "weight")
#modparam("rtpengine", "setid_default", 1)


#-------Carrierroute module params---------
modparam("carrierroute", "db_url", DBURL)
modparam("carrierroute", "config_source", "db")
modparam("carrierroute", "default_tree", "default")
modparam("carrierroute", "carrierroute_rewrite_prefix_col", "rewrite_prefix")
modparam("carrierroute", "carrierroute_rewrite_suffix_col", "rewrite_suffix")
modparam("carrierroute", "carrierfailureroute_table", "carrierfailureroute")

modparam("sqlops","sqlcon", SQLOPSDB)

#-------DROUTING module params---------
modparam("drouting", "db_url", DBURL)

#-----uac params ------
modparam("uac","reg_db_url", DBURL)
modparam("uac", "reg_db_table", "uacreg")
modparam("uac", "reg_timer_interval", 20)
modparam("uac", "reg_retry_interval",120)
modparam("uac", "reg_contact_addr", REGCONTADDR)
modparam("uac","auth_realm_avp","$avp(realm)")
modparam("uac","auth_username_avp","$avp(uname)")
modparam("uac","auth_password_avp","$avp(passwd)") 
modparam("uac","restore_mode","auto")


#acc param
modparam("acc", "db_url", DBURL)
modparam("acc", "cdrs_table", "acc_cdrs")
modparam("acc", "log_flag", FLT_ACC)
modparam("acc", "log_missed_flag", FLT_ACCMISSED)
modparam("acc", "failed_transaction_flag", FLT_ACCFAILED)
modparam("acc", "early_media", 1)
modparam("acc", "report_ack", 1)
modparam("acc", "report_cancels", 1)
modparam("acc", "failed_filter", "404,407")
modparam("acc", "time_format", "%Y/%m/%d %H:%M:%S")
modparam("acc", "cdr_enable", 1)
modparam("acc", "log_level", 1)
modparam("acc", "acc_method_column", "method")
modparam("acc", "cdr_start_on_confirmed", 1)
modparam("acc", "cdr_expired_dlg_enable", 1)
modparam("acc", "cdr_start_on_confirmed", 1)
modparam("acc", "cdr_facility", "LOG_DAEMON")
modparam("acc", "db_insert_mode", 1)
modparam("acc", "db_extra", "src_user=$fU;src_domain=$fd;dst_ouser=$tU;dst_user=$rU;dst_domain=$rd")
modparam("acc", "log_extra","src_user=$fU;src_domain=$fd;dst_ouser=$tU;dst_user=$rU;dst_domain=$rd")

#-----dialog params ------
modparam("dialog", "enable_stats", 1)
modparam("dialog", "track_cseq_updates", 1)
modparam("dialog", "dlg_flag", FLT_DIALOG)
modparam("dialog", "send_bye", 1)
modparam("dialog", "db_mode", 3)
modparam("dialog", "timeout_noreset", 1)
modparam("dialog", "enable_stats", 1)
modparam("dialog", "db_url", DBURL)

#-----dispatcher params------------
modparam("dispatcher", "db_url", DBURL)
modparam("dispatcher", "ds_ping_method", "OPTIONS")
modparam("dispatcher", "ds_ping_from", HOSTNAME)
modparam("dispatcher", "ds_probing_mode", 1)
modparam("dispatcher", "ds_ping_interval", 30)
modparam("dispatcher", "ds_probing_threshold", 10)
modparam("dispatcher", "ds_ping_reply_codes", "class=2;code=403;code=404;code=488;class=3")

#modparam("topoh", "mask_key", "YouDoHaveToChangeThisKey")
#modparam("topoh", "mask_ip", "sbc.colynn.pro")
#modparam("topoh", "mask_callid", 1)
#modparam("topoh", "event_mode", 1)

modparam("xhttp_prom", "xhttp_prom_stats", "all")


modparam("permissions", "db_url", DBURL)
